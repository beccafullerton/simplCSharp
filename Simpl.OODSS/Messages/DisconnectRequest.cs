//
//  DisconnectRequest.cs
//  s.im.pl serialization
//
//  Generated by DotNetTranslator on 04/09/11.
//  Copyright 2011 Interface Ecology Lab. 
//

using System;
using Simpl.OODSS.Distributed.Common;
//using Simpl.OODSS.Distributed.Server.ClientSessionManager;
using Simpl.Serialization.Attributes;
using Ecologylab.Collections;
using DisconnectRequest = Simpl.OODSS.Messages.DisconnectRequest;

namespace Simpl.OODSS.Messages 
{
	/// <summary>
	/// missing java doc comments or could not find the source file.
	/// </summary>
	[SimplInherit]
	public class DisconnectRequest : RequestMessage
	{
        public static readonly DisconnectRequest ReusableInstance = new DisconnectRequest();

		public DisconnectRequest()
		{ }

	    public override ResponseMessage PerformService(Scope<object> localScope)
	    {
//	        Debug.WriteLine("***** running disconnect request *****");
//	        SessionHandle handle = (SessionHandle) localScope.Get(SessionObjects.SessionHandle);
//            if (handle!=null)
//                handle.Invalidate();
	        return OkResponse.ReusableInstance;
	    }
	}
}
